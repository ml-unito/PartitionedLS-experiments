reset;
option solver "./minos";
option presolve 0;
option randseed 0;
model problem.mod;

data params.data;

param test;
param iter;
param normalize;
param best;
param local_minima{1..test};
let best:=10000000000;
let test:=1;
let iter:=100000;
for{i in 1..test} {
  let {j in 1..M} alpha[j]:=Uniform(0,1);
  for {k in 1..K} {
    let normalize:=sum{r in h[k]..(h[k+1]-1)} alpha[r];
    let {j in h[k]..(h[k+1]-1)} alpha[j]:=alpha[j]/normalize;
  }

  let {j in 1..K} beta[j]:=Uniform(-10,10);


  for{l in 1..iter}{
    for{k in 1..K}{
      fix alpha;
      fix beta;

      unfix beta[k];
      for{m in h[k]..(h[k+1]-1)}{
         unfix alpha[m];
      }
      solve;
    }
  }

  let local_minima[i]:=ab;
  if (ab<best) then {
    let best:=ab;
  }
}
display best;
display local_minima;
